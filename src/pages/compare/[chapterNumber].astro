---
import Layout from "../../layouts/Layout.astro";
import Chapter from "../../components/Chapter.astro";
import { getCollection } from "astro:content";
import {
  type Chapter as ChapterType,
  translationChapterNumbers,
} from "../../data/chapterNumbers";
import { Icon } from "astro-icon/components";

// Function to generate static paths based on chapter numbers
export function getStaticPaths() {
  return translationChapterNumbers.map((chapterNumber) => ({
    params: { chapterNumber: chapterNumber.toString() },
  }));
}

// Extract the chapterNumber from Astro.params
const { chapterNumber } = Astro.params as unknown as {
  chapterNumber: ChapterType;
};

// Fetch and filter the chapterFiles collection to match the current chapterNumber
const chapterFiles = await getCollection("translations", ({ data }) => {
  return data.chapter === parseInt(chapterNumber);
});
---

<Layout title={`Tao Te Ching translations `}>
  <div class="flex px-10 mb-10 gap-2 items-center">
    <Icon name="left-to-line" />
    <a href="/" class="flex items-center underline underline-offset-2">Home</a>
    <Icon size={10} name="circumpunct" class="circumpunct-icon" />
    <a
      data-astro-prefetch="viewport"
      href="/compare/all"
      class="flex items-center underline underline-offset-2">Compare All</a
    >
    <Icon size={10} name="circumpunct" class="circumpunct-icon" />
    <a href="#" class="flex items-center underline underline-offset-2"
      >Compare Chapter {chapterNumber}</a
    >
  </div>
  <div class="flex gap-24 px-10 comparison-container w-max">
    {
      chapterFiles.map(async (chapter) => {
        const { Content } = await chapter.render();
        return (
          <div class="flex flex-col gap-4 overflow-auto scrollbar">
            <div class="translation-info">
              <h2 id={chapter.data.translator.replace(/\s/g, "")}>
                {chapter.data.translator}
              </h2>
            </div>
            <Chapter
              chapterNumber={chapter.data.chapter}
              chapterName={chapter.data.chapterName}
              translationCode={chapter.data.code}
              content={chapter.body}
              comparisonMode={true}
            >
              <Content />
            </Chapter>
            <a
              class="opacity-70 hover:opacity-100 transition-opacity text-sm underline mb-10"
              href={`/read/${chapter.data.code}#${chapter.data.code}-${chapter.data.chapter}`}
            >
              Continue from this chapter in the full{" "}
              {chapter.data.translator === "Laozi"
                ? "classical Chinese text."
                : `${chapter.data.translator} translation.`}
            </a>
          </div>
        );
      })
    }
  </div>
</Layout>
